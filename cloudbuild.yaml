steps:
  ## Uncomment building of build tools if they do not exist.
  # build sass tool
  # - name: 'gcr.io/cloud-builders/docker'
  #   dir: 'build_tools/sass'
  #   args: ['build', '-t', 'gcr.io/$PROJECT_ID/sass_builder', '.']

  #   # push sass tool image
  # - name: 'gcr.io/cloud-builders/docker'
  #   args: ['push', 'gcr.io/$PROJECT_ID/sass_builder:latest']

  # # build firebase tool
  # - name: 'gcr.io/cloud-builders/docker'
  #   dir: 'build_tools/firebase'
  #   args: ['build', '-t', 'gcr.io/$PROJECT_ID/firebase', '.']

  # # push firebase tool image
  # - name: 'gcr.io/cloud-builders/docker'
  #   args: ['push', 'gcr.io/$PROJECT_ID/firebase:latest']

  # # build nrwl tool
  # - name: 'gcr.io/cloud-builders/docker'
  #   dir: 'build_tools/nrwl'
  #   args: ['build', '-t', 'gcr.io/$PROJECT_ID/nrwl_builder', '.']

  # # push nrwl tool image
  # - name: 'gcr.io/cloud-builders/docker'
  #   args: ['push', 'gcr.io/$PROJECT_ID/nrwl_builder:latest']

  - name: 'gcr.io/$PROJECT_ID/nrwl_builder'
    args: ['install']

  # build stylesheets
  - name: 'gcr.io/$PROJECT_ID/sass_builder'
    args: ['./apps/sass/theme.scss', './apps/rockme/src/assets/theme.css']

  # decrypt environment file
  - name: gcr.io/cloud-builders/gcloud
    dir: apps/rockme/src/environments
    args:
      - kms
      - decrypt
      - --ciphertext-file=environment.prod.ts.enc
      - --plaintext-file=environment.ts
      - --location=global
      - --keyring=${_ENC_KEY_RING}
      - --key=${_ENC_KEY}

  # decrypt key file
  - name: gcr.io/cloud-builders/gcloud
    args:
      - kms
      - decrypt
      - --ciphertext-file=monorock_key.enc
      - --plaintext-file=key.json
      - --location=global
      - --keyring=${_ENC_KEY_RING}
      - --key=${_ENC_KEY}

  - name: 'gcr.io/$PROJECT_ID/nrwl_builder'
    args: ['run-script', 'test', 'api']

  - name: 'gcr.io/$PROJECT_ID/nrwl_builder'
    args: ['run-script', 'test', 'rockme']

  - name: 'gcr.io/$PROJECT_ID/nrwl_builder'
    args: ['run-script', 'build', '--prod']

  - name: 'gcr.io/$PROJECT_ID/nrwl_builder'
    args: ['run-script', 'build', 'api', '--prod']

  - name: 'gcr.io/$PROJECT_ID/nrwl_builder'
    args: ['run-script', 'prebuild:apipackage']

  - name: 'gcr.io/$PROJECT_ID/nrwl_builder'
    args: ['run-script', 'prebuild:apidocker']

  - name: 'gcr.io/$PROJECT_ID/nrwl_builder'
    args: ['run-script', 'prebuild:apijson']

  # set firebase token
  - name: 'gcr.io/$PROJECT_ID/firebase'
    args: ['use', '$PROJECT_ID']
    secretEnv: ['FIREBASE_TOKEN']

  # deploy to firebase
  - name: 'gcr.io/$PROJECT_ID/firebase'
    args: ['deploy', '--only', 'hosting']
    secretEnv: ['FIREBASE_TOKEN']

  # build api image with arguments
  - name: 'gcr.io/cloud-builders/docker'
    dir: 'dist/apps/api'
    entrypoint: 'bash'
    args:
      [
        '-c',
        'docker build -t gcr.io/$PROJECT_ID/${_API_IMAGE_NAME}:latest -f Dockerfile --build-arg BUILD_COMMIT=$SHORT_SHA --build-arg DB_PASSWORD=$$DB_PASSWORD  .',
      ]
    secretEnv: ['DB_PASSWORD']
  # push api images
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/${_API_IMAGE_NAME}:latest']

  # deploy API to cloud run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      [
        'beta',
        'run',
        'deploy',
        '${_API_SERVICE_NAME}',
        '--image',
        'gcr.io/$PROJECT_ID/${_API_IMAGE_NAME}',
        '--region',
        us-central1,
        '--platform',
        'managed',
        '--allow-unauthenticated',
        '--update-env-vars',
        'DB_ENV=production,CLOUD_SQL_CONNECTION_NAME=monorock:us-east1:monorock',
      ]
substitutions:
  _API_SERVICE_NAME: monorockapi
  _API_IMAGE_NAME: monorock-api
  _ENC_KEY_RING: monorock-integration-secrets
  _ENC_KEY: monorock-firebase-token

secrets:
  - kmsKeyName: projects/monorock/locations/global/keyRings/monorock-integration-secrets/cryptoKeys/monorock-firebase-token
    secretEnv:
      FIREBASE_TOKEN: CiQAy0NVR7SUUqDhfL1ij6knHd9sIiLX/kgy8pBEeUPIBWnF3vwSkAEAlioXGAphMnchTae3mzJ8Mav88uqFX4AgZj9s5qnkXEmSsTdgNcKd+7E+XvMoY0tDfLHh4kjFZEjsVUhE30FORC6+rDmrdaSEYpJNJ7tmJ14mrWvhLAz7AOLAqoFA0l0+yGdiM2UQYPnU4xkx51uJgtu1AS146XaVgOjk69UpyTVF1r/twGSl8Jx7cmqbGAY=
      DB_PASSWORD: CiQAy0NVR4Ip2VVuFB2q5yB+jadbf+OuomW22YG6htmjlbMb2vUSOQCWKhcYat9GRMvAyq2EdfSjvR8kT+zu/Z2YCATkoCxecsDgsA42BduqH1YRPGT6U6Gu1dY+bo44sg==
